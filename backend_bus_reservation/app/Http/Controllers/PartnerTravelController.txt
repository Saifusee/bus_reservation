<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\PartnerTravel;
use Carbon\Carbon;
use App\Http\Requests\CreatePartnerTravelRequest;

class PartnerTravelController extends Controller
{
    /**
     * Display all data stored by particular user.
     *
     * @return \Illuminate\Http\Response
     */
    public function index($user_id, PartnerTravel $model)
    {
        return response()->json($model->where('user_id', '=', $user_id)->get(), 200);
    }


    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(CreatePartnerTravelRequest $request)
    {
        $new_partner_travels = PartnerTravel::create($request->all());
        return response()->json($new_partner_travels, 201);

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        return response()->json(PartnerTravel::findOrFail($id), 200);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(CreatePartnerTravelRequest $request, $id)
    {
        return response()->json(PartnerTravel::findOrFail($id)->update($request->all()), 200);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        return response()->json(PartnerTravel::findOrFail($id)->delete(),204);
    }
}
